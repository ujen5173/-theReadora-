generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Enum for story status
enum StoryStatus {
    DRAFT
    PUBLISHED
    DELETED
    PRIVATE
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    stories       Story[]
}

model Story {
    id           String      @id @default(cuid())
    title        String
    slug         String      @unique
    summary      String
    reads        Int         @default(0)
    votes        Int         @default(0)
    chapterCount Int         @default(0)
    readingTime  Int         @default(0)
    thumbnail    String
    tags         String[]
    isMature     Boolean     @default(false)
    storyStatus  StoryStatus @default(DRAFT)
    isCompleted  Boolean     @default(false)
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([title, slug, tags], name: "story_index")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
